D E B U G
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Below Section - Current bugs.
    # Unsolved
        # Bug # 04 - Have to add in code for whenever drawing discard pile; whenever you have other regular cards that would make up a 3+ card meld and make you reach meld requirement it would allow you to pick up the discard pile instead of only checking for available wild cards.
        # Whenever I played a 2 card meld with 2 Joker wild cards, after I chose 'Yes' to using a wild card to make it a 3 card meld, the output displayed 'Okay, you will use the Joker', and THEN asked me to choose which of the 2 Jokers I would like to use. It shouldn't have said the first input because it shouldn't determine which wild card I am going to use.
            # Note: Did I fix this already?
        # Whenever prompted with the output: 'j, which meld from your play cards or your melds would you like to add the Joker to? Click any meld to choose it.', it does not allow me to choose a wild card.
            # Note: Is this fixed?? I haven't encountered this bug in quite some time....
    # Solved (Or should be!)
        # Bug # 02 - Successfully drew the discard pile whenever the face_up_discard was a 7 while having 2 7s in my hand and some previously existing melds (already met the meld requirement), but all 3 7s seemed to just disappear; they are not located visually anywhere on the screen.
          # DUPLICATE - Bug # 02 - Drawing the discard pile using cards from the hand succeeded but the discard pile never became empty with the same face up discard remaining in place, and the proposed meld, although the game said it was successfully added to the list of melds, never appeared in the meld group visually.
          # DUPLICATE - Bug # 02 - Drawing the discard pile using cards from the hand allows you to choose wild cards and create a valid meld, but it doesn't work. Whenever you pick up the discard piile it doesn't seem to work.
          # DUPLICATE - Bug # 02 - When picking up the discard pile successfully via using 2 cards from the player's hand to create a meld (having already had a meld and met the meld requirement on a previous turn), it looks as if the cards from the discard pile were appended to the player's hand but it doesn't look like they were popped from the discard pile. The discard pile should be empty at this point but it definitely is not.
            # Note: Should be fixed - The cards being appended to the discard pile meld were coming from a copy of the cards, instead of a direct transfer from the hand to the meld. Changed it so they are popped and appended directly.
            # Note: Correction; the face_up_discard 7 remained as the face_up_discard, unless somehow it was removed and then appended right back to its location.
            # Note: Despite discarding future discards, the 7 still remains visually as the face_up_discard; it's layer seems to be higher than the others.
            # Note: Added in a face_up_discard print out for all of the various locations in which it is checked to help try and solve the problem.
            # Note: Despite the visual face_up_discard being the 7, whenever I discarded an 8 and then picked up the discard pile using 2 8s from the other players hand, it successfully took the 8s (which means they must have actually been the face up discards) therefore the visual issue is definitely caused by faulty .layer assignment. In this case it also does not display the meld of 8s. Also, the 7 is still visually the face_up_discard.
            # Note: It turns out the disappered meld created from the discard pile is technically in the list of melds, as whenever I created a new meld it visually placed them in the next spot, leaving a visually blank spot where that meld technically is located.
            # Note - Face-up discard was actually in the player's hand, visually, after the attempt.
        # Bug # 05 - Showing a 3 as the clicked card for the wild_card I visually clicked to be joined to my attempted meld. Traceback error referenced line 624.
            # Note: Should be fixed - The line that popped the wild_card from play_cards_wild_cards_ref was executed after the line that popped the wild_card from pre_sort_play_cards, causing the former to access an incorrect index. Swapped the two lines to fix issue.
        # Played a 9 when I already had a preexisting meld with 3 9s in it, but the game output after the play said 'Sorry, but it looks like you were unable to successfully play any of your attempted play cards' despite the 9 successfully being added to the meld.
            # Note: Verified as fixed - I was using a direct slice reference to a list of lists, when instead I needed to do a deep copy of the list of lists. To fix I used a for loop to iterate through the list of lists, appending each sliced inner list to the new list copy.
        # Played only 2 cards, but game did not immediately return the 'len(pre_sort_play_cards) < 3:' clause. This may have something to do with the other bug concerning the discard pile, perhaps.
            Note: Should be fixed - Was not actually a bug originally; the if clause only triggered if the player had not yet met the meld_requirement.
        # After making all of the changes to valid_play_check_and_sort(), wild_card_handler(), and wild_card_meld_choice_prompt(), when playing some play cards, one of the play cards never visually left the play cards visual location despite all of them being appended back to the hand.
            # Note: Should be fixed - The issue was popping from one list which was directly referenced by another list which we were iterating through; popping from the original affected the reference and caused iteration skipping.
        # Bug # 03 - Whenever attemping to go out, but not having a canasta, game crashed with traceback error as 'AttributeError: 'list' object has no attribute 'highlighted''.
            # Note: Should be fixed - Went through the entire went_out_check_replacement_card() function letter by letter and line by line, revising it because it was not up to date with the latest changes to the code.
        # The play_cards are not being resituated after cards are popped from them, as is done for all of the other card groups.
            # Note - Should be fixed. Went through the entire valid_play_check_and_sort() functions and also wild_card_handler() and wild_card_meld_choice_prompt() and other misc. places to change the code so that all of the reference lists are simply that; references to the actual location of the cards in play_cards so that there should never be internal inconsistencies concerning which cards are technically or visually in the card group; they will always be both. independent of the references.
        # When pre_sort_play_cards are being resituated, cards are overlapping other cards, which means that some cards have been popped from pre_sort_play_cards, but have not been appended to another CustomAppendList yet, or 'replaced' back into pre_sort_play_cards properly, which causes p1&p2_pre_sort_play_cards_next_loc to errantly calculate that the card group len is an inaccurate number.
            # Note - Should be fixed - Changed all of the instances where the cards in pre_sort_play_cards were being popped out of the list to go into reference lists so that they were instead only appended to the reference list and popped/appended via pre_sort_play_cards which ensures that the card group len is always accurate and makes for slightly cleaner operation.
        # The pre_sort_play_cards are not being resituated after cards are popped from them, as is done for all of the other card groups.
        # The 'Type error: cannot pickle 'pygame.Surface' object' traceback seems to happen whenever I make 2 consecutive play attempts (one turn for P1 (play some cards), one turn for P2, another turn for P1 (attempt to play some cards)).
            # Note: Should be fixed - the issue seemed directly connected to the copy module, specifically the copy.deepcopy method. Fixed by instead using a simpler form of a list replica via list[:].
        # Bug # 01: Whenever playing 2 cards from a preexisting rank's meld, the cards do not properly get added to the meld, but instead stay visually inside of pre-sort play cards.
          # DUPLICATE - Bug # 01: Whenever successfully drawing the discard pile, the face up discard that should be added to the player's preexisting meld is instead visually placed and remains after the fact inside of the pre-sort play cards.
            # Note: Should be fixed - whenever a temp_meld from play_cards was transferred to player.melds, the temp_meld's card_group_name stayed as play_cards instead of being reassigned a new card_group_name whenever it was transferred into the new card_group (current_player.melds). Therefore added in 1 line of code to assign a new card_group_name whenever a CustomAppendList is appended to an associated card_group.
        # When I played 2x 2-card attempted melds and 2x wild cards along with them, after I was given the choice to place them in the len 2 melds, which I did, making the 2x melds consist of 3 cards each, but it errantly output the message - 'You have attempted to create meld(s) with less than 3 cards' - and then errantly output the message - 'Sorry, but the value of your play cards (0)...'. :|
        # In the case that both players have the same draw card, the player names stay what the players gave them previously, but the game prompts the players to give them new names. It should just keep those names, I believe.
        # The card group name display boxes should only display whenever there are cards in the card group associated with each text box.
            # * Note: partially fixed, but the names are still showing for pre_sort_play_cards when it is empty before anything is played (I think) and melds also show after a play is made but before anything is even added to melds. *
        # Whenever there are preexisting Red 3's visually displayed in a player's meld group before the player has melded any cards, whenever he does meld cards subsequently the first meld is visually placed in the same location as the Red 3 meld. I have to make it so that the Red 3 meld is visually located based on an updated list of the current melds (if that is the root cause).
        # Not Finished: game.progression_text_obj section; need to make it so that both of the text objs get blitted and that in the case that obj_2 was previously blitted that the 'erase' section is run in that instance as well as all of the others. Also need to finish loigc concerning whether or not when in this case 'obj' should be changed to none, then create 'obj_1' & 'obj_2', having the blit section chcek whether or not 'obj_1' & 'obj_2' are none, just as it # checks for all of the other renders...
        # Whenever attempting to add wild_cards to temp_melds during valid_play_check_and_sort(), whenever it asks the player to choose a meld to add the wild card to, the game does not recognize any card clicks and never does anything or progresses any further. No crash, just no click recognition.
        # Whenever cards are transferred from the hand to pre_sort_play_cards, instead of moving card for card they are moved one time as an entire unit.
            # * Note: Not a bug! It's just that the cards move so fast it seems they move all at once. Perhaps adding in framerate control via delta time will solve this issue. *
        # Whenever there are so many play_cards attempted melds that they visually take up all of the available visual meld slots, the remaining wild cards in the list of play cards visually overlay the meld groups. I need to code in a limit for valid x-coordinates for the play_cards melds and make the cards in pre_sort_play_cards have their visual locations calculated based on the visual locations of the melds in play_cards so that they never visually overlap. Might hvae to make it so the limit-exceeding cards get displayed on the next row (below or above).
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Below Section - Error traceback code goes here in this section; for debugging.
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    # Bug # 03

        File "J:\Programming\Projects\Canasta\canasta\progression.py", line 229, in stock_draw
        play_2(current_player) # ****
        File "J:\Programming\Projects\Canasta\canasta\progression.py", line 474, in play_2
        valid_play_check_and_sort(current_player) # ****
        File "J:\Programming\Projects\Canasta\canasta\progression.py", line 718, in valid_play_check_and_sort
        went_out_check(current_player) # ****
        File "J:\Programming\Projects\Canasta\canasta\progression.py", line 907, in went_out_check
        went_out_check_replacement_card(current_player) # ****
        File "J:\Programming\Projects\Canasta\canasta\progression.py", line 940, in went_out_check_replacement_card
        current_card.highlighted = True
        AttributeError: 'list' object has no attribute 'highlighted'
# -------------------------------------
    # Bug # 05

        valid_play_check_and_sort(current_player) # ****
        File "J:\Programming\Projects\Canasta\canasta\progression.py", line 624, in valid_play_check_and_sort
        current_player.play_cards_wild_cards_ref.pop(current_player.play_cards_wild_cards_ref.index(wild_card_choice))
        ValueError: 3 is not in list
