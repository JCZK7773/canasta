03/01/21 - 01/01/22: Developed 1200 lines of text-version of game & 1800 lines of pytest tests. Also debugged via testing and playthrough.

01/18/21: Began conversion from text-version to 2D. Reviewed options and chose pygame. Analyzed how to make the transition properly.

01/19/21: 1) Began coding pygame display base code. 2) Found and downloaded card assets. 3) Coded function for card image assignment using associated assets. 4) Created and adjusted card sprite group sizes and locations. 5) Ran first pass of all 108 card objects drawn on pygame screen.

01/20/21: 1) Adjusted card sizes to be a bit smaller. 2) Optimized and relocated some of the code added from day before. 3) Created Location class to assign associated x,y coordinates for the various card locations (i.e. player.hand/melds/red_3_meld etc.) and tested/assigned coordinates for said locations. 4) Assessed and tested how to go about triggering card location transfer in-game on-screen. 5) Set player.meld sprite locations and tested the code, with the end result being the melds properly placed and displayed on the screen, as well as a properly placed deck.

01/21/21: 1) Altered card.x & card.y to be calculated properties that update card.rect.center every time they are set so as to avoid having to make the required, additional update every time they are changed. 2) Cleaned up code in locations.meld_location_situate() to reflect #1 changes, and removed/changed other code within to be more readable and concise. 3) Tested and verified correctness of all changes; code is working as intended.

01/22/22: 1) Brainstormed and theorycrafted ideas for converting game progression loop to be compatible with an ever-updating screen that reflects in real-time all proper card locations. I think I have to make it so that draw_window()/ card location.update() is called each time a card is moved. Initially considered that I could have a recursive loop that would recursively call progression_loop(fun_num) and draw_window(), but this would deny mid-function screen updates, which would not reflect a proper responsiveness for a 2D game.

01/23/22 - 02/01/22: ...

02/02/22: 1) Brainstormed possible solutions to update card coordinates every time a card is appended to a different list, for the purpose of visually updating its location every time it is moved digitally. 2) Found a solution via subclassing list, giving each list a self.name (given at the instantiation of the custom list class), and customizing the append() method so that each time it is called, it checks self.name against a dictionary that has an associated function for each list name, which in turn updates the x,y coordinates, the final location depending on the list's registered coordinates.

02/01/22 - 02/07/22 : Completed implementation of the first pass of the card movement system by creating various methods, each associated with one of the various card lists, inside of the Locate instance which are to be called by CustomAppendList whenever they are appended to. Needs to be tested to work out bugs.

02/08/22 : Began conversion of text-based inputs to be text display rects on the game screen. Continued working on ideas for card movements.

02/09/22 - 02/17/22 : Put off converting text inputs after implementing the very first steps for the feature, and refocused on implementing card movements. Eventually implemented a successful card movement system, with some minor bugs in visual card overlap and game lag. Worked out all of the existing bugs from the card movement implementation and began working on reducing game lag via .convert() & using Dirty Sprites.

02/18/22 : Tidied up some code, updated devlog, added in missing section commentary, and changed card movement values from 1 to 0.5 to (hopefully) help smooth the movements.

02/19/22 - 02/27/22 : Divided up all of the code into various different files so that they are more easily organized and readable. Worked out bugs from that change. Fixed red 3 meld, mostly, which was broken.

02/28/22: Fixed some card movement bugs including the issue with the red 3 meld, and almost fixed the issues of cards appearing in the top left corner of the screen. Spent a lot of time pinpointing the issue, which apparently lies in card.rect & card.rect.center initial assignments. Fixed the bug where the cards were staying rendered in the top left corner of the display.

02/29/22 - 03/28/22: Made a lot of bug fixes, reworked all of the movement functions into a much smaller list of functions that take the specific lists as args, and did a lot of card movement testing. Card movement seems to be nearly at 100% success. Also, drastically reduced card movement times by fixing the game code, and rearranged some other code.

03/29/22 - 04/04/22: Finished consolidating card movement functions into a smaller array of functions that take in the card group parameter instead. Finished and tested canasta sized melds to collapse visually within themselves for proper visual display, including rendering the proper face-up card dependent on whether or not the meld was natural or mixed. Finished and tested proper display_layer visual updates for canastas.

04/05/22 - 04/07/22: Finished consolidating, improving readability, and reducing lines for visual_meld_group_update and stress tested the final form.

04/08/22: Finished fixing all card group movement functions completely. Ran testing for the movement functions: Cards associated with a customappendlist meld, but that are not inside of the associated meld group, as intended, do not get rendered. Full melds appended to a customappendlist meld group are properly displayed. Red_3_melds are properly located as well..

04/11/22: Finished adjusting all of the card group positions. Finished creating and adjusting the text labels for the various card groups.

04/12/22 - 04/20/22: Began and finished implementing logic system for event handling of text output, user input, and card-clicking. Began and mostly finished reworking progression.py to be compatible with the modern 2D code base. Began work on determining how to change areas of code where numerical values were used to represent cards to the new system of card-clicking & processing.

04/21/22: Spent entire 4 hr. session debugging and fixing up some bad code from the many changes I made from the last session. Worked out most of the bugs from that, such as some logic, improper indentations, improper module/class/instance references, etc.

04/22/22 - 05/04/22: Finished and polished the progression text and input text sections in game.py and the associated logic. Completely debugged the system, and cleaned up and changed things around in the code for draw_window_the_draw(). Input happens in real time, backspace works, and display is reset each time a value is processed. Continued to debug logic in progression.py.

05/05/22 - 05/09/22: Started, finished, debugged, and tested the card movement speed issue, card click event handling, input (backspacking, clearing the rects after input, etc.), reworked much of the logic in progression.py, and continued to clean up comments and outdated code as I go along.

06/01/22 - 06/19/22: Took a long break. Did not code at all during this time.

06/20/22: Worked on implementing code for the case wherein the width of the progression text is wider than the screen display. Mostly finished. Need to finish and debug that. A couple other minor changes.

06/21/22 - 06/28/22: Added pre_sort_play_cards for per-sorted play cards to have a visual location before they are sorted; debugged and improved that feature. Ran many game tests to find bugs and record them; debugged some of these (various minor bugs). Altered locations of progression text and input text boxes. Debugged and improved customappendlist to work properly with new logic conditions. Other minor misc. changes.

06/29/22 - 07/05/22: Debugged the text box locations since I changed the size of the text and made some other visual changes. Began debugging the 13 bugs I uncovered and documented in last session; debugged wild_card_handler() issue wherein game was not recognizing card click choice; turns out that there was a deeper logic bug that needed to be fix, so I reworked that function and cleaned it up. Also changed the Red 3 meld and Red 3 meld text box location to be in the bottom right corner of each player's side. Also removed its y-coordinate offset; this required altering visual_red_3_meld_update() to place the cards in the new proper location. Next, worked on first pass of debugging the progression_text_obj & progression_text_obj_2 to fit properly on the screen, erase the pre-existing rect whenever necessary, and blit the objects.
