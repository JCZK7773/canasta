03/01/21 - 01/01/22: Developed 1200 lines of text-version of game & 1800 lines of pytest tests. Also debugged via testing and playthrough.
01/18/21: Began conversion from text-version to 2D. Reviewed options and chose pygame. Analyzed how to make the transition properly.
01/19/21: 1) Began coding pygame display base code. 2) Found and downloaded card assets. 3) Coded function for card image assignment using associated assets. 4) Created and adjusted card sprite group sizes and locations. 5) Ran first pass of all 108 card objects drawn on pygame screen.
01/20/21: 1) Adjusted card sizes to be a bit smaller. 2) Optimized and relocated some of the code added from day before. 3) Created Location class to assign associated x,y coordinates for the various card locations (i.e. player.hand/melds/red_3_meld etc.) and tested/assigned coordinates for said locations. 4) Assessed and tested how to go about triggering card location transfer in-game on-screen. 5) Set player.meld sprite locations and tested the code, with the end result being the melds properly placed and displayed on the screen, as well as a properly placed deck.
01/21/21: 1) Altered card.x & card.y to be calculated properties that update card.rect.center every time they are set so as to avoid having to make the required, additional update every time they are changed. 2) Cleaned up code in locations.meld_location_situate() to reflect #1 changes, and removed/changed other code within to be more readable and concise. 3) Tested and verified correctness of all changes; code is working as intended.
01/22/22: 1) Brainstormed and theorycrafted ideas for converting game progression loop to be compatible with an ever-updating screen that reflects in real-time all proper card locations. I think I have to make it so that draw_window()/ card location.update() is called each time a card is moved. Initially considered that I could have a recursive loop that would recursively call progression_loop(fun_num) and draw_window(), but this would deny mid-function screen updates, which would not reflect a proper responsiveness for a 2D game.
01/23/22 - 02/01/22: ...
02/02/22: 1) Brainstormed possible solutions to update card coordinates every time a card is appended to a different list, for the purpose of visually updating its location every time it is moved digitally. 2) Found a solution via subclassing list, giving each list a self.name (given at the instantiation of the custom list class), and customizing the append() method so that each time it is called, it checks self.name against a dictionary that has an associated function for each list name, which in turn updates the x,y coordinates, the final location depending on the list's registered coordinates.
